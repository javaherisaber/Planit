/////// load signature file //////
def keystorePropertiesFile = file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'org.jetbrains.dokka-android'

android {
    compileSdkVersion config.compileSdk
    defaultConfig {
        applicationId "ir.logicbase.planit.app"
        minSdkVersion config.minSdk
        targetSdkVersion config.targetSdk
        multiDexEnabled true
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    dataBinding {
        enabled true
    }
    signingConfigs {
        production {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.production
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kapt {
        useBuildCache = true
        javacOptions {
            // Increase the max count of errors from annotation processors.
            // Default is 100.
            option("-Xmaxerrs", 500)
        }
    }
    dokka {
        outputFormat = 'html'
        outputDirectory = "$buildDir/javadoc"
        skipDeprecated = true // Do not output deprecated members
        reportUndocumented = true // Emit warnings about not documented members.
    }
    androidExtensions {
        experimental = true
    }
    packagingOptions {
        exclude 'META-INF/core_release.kotlin_module'
        exclude 'META-INF/library_release.kotlin_module'
        exclude 'META-INF/atomicfu.kotlin_module'
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    // androidx
    implementation "androidx.appcompat:appcompat:$versions.appCompat"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraintLayout"
    implementation "androidx.constraintlayout:constraintlayout-solver:$versions.constraintLayout"
    implementation "androidx.vectordrawable:vectordrawable:$versions.vectorDrawable"
    implementation "androidx.recyclerview:recyclerview:$versions.recyclerView"
    implementation "androidx.cardview:cardview:$versions.cardView"
    implementation "androidx.preference:preference-ktx:$versions.preference"
    implementation "androidx.multidex:multidex:$versions.multidex"

    // Room
    implementation "androidx.room:room-runtime:$versions.room"
    kapt "androidx.room:room-compiler:$versions.room"
    implementation "androidx.room:room-rxjava2:$versions.room"
    implementation "androidx.room:room-ktx:$versions.room" // Coroutines support

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-reactive:$versions.coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-rx2:$versions.coroutines"

    // dagger
    kapt "com.google.dagger:dagger-compiler:$versions.dagger"
    kapt "com.google.dagger:dagger-android-processor:$versions.dagger"

    // test
    testImplementation "junit:junit:$versions.junit"
    androidTestImplementation "androidx.test:runner:$versions.runner"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espresso"

    // leak-canary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$versions.leakCanary"
    debugImplementation "com.squareup.leakcanary:leakcanary-support-fragment:$versions.leakCanary"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$versions.leakCanary"

    // other dependencies
    implementation "org.jetbrains.anko:anko-commons:$versions.anko"
    implementation "de.hdodenhof:circleimageview:$versions.circleImageView"
    implementation "com.squareup.picasso:picasso:$versions.picasso"
    implementation "com.github.roojin:persian-calendar-view:$versions.persianCalendar"

    // config
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':data')
}

apply plugin: 'com.google.gms.google-services'